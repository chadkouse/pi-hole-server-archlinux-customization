diff -uprN AdminLTE-5.0/api.php AdminLTE-5.0.cust/api.php
--- AdminLTE-5.0/api.php	2020-05-10 20:07:48.000000000 +0200
+++ AdminLTE-5.0.cust/api.php	2020-05-19 20:24:40.025848396 +0200
@@ -20,7 +20,7 @@ $data = array();
 // Common API functions
 if (isset($_GET['status']))
 {
-	$pistatus = exec('sudo pihole status web');
+	$pistatus = exec('sudo /usr/bin/pihole status web');
 	if ($pistatus == "1")
 	{
 		$data = array_merge($data, array("status" => "enabled"));
@@ -42,7 +42,7 @@ elseif (isset($_GET['enable']) && $auth)
 		// Skip token validation if explicit auth string is given
 		check_csrf($_GET['token']);
 	}
-	exec('sudo pihole enable');
+	exec('sudo /usr/bin/pihole enable');
 	$data = array_merge($data, array("status" => "enabled"));
 	unlink("../custom_disable_timer");
 }
@@ -63,12 +63,12 @@ elseif (isset($_GET['disable']) && $auth
 	if($disable > 0)
 	{
 		$timestamp = time();
-		exec("sudo pihole disable ".$disable."s");
+		exec("sudo /usr/bin/pihole disable ".$disable."s");
 		file_put_contents("../custom_disable_timer",($timestamp+$disable)*1000);
 	}
 	else
 	{
-		exec('sudo pihole disable');
+		exec('sudo /usr/bin/pihole disable');
 		unlink("../custom_disable_timer");
 	}
 	$data = array_merge($data, array("status" => "disabled"));
diff -uprN AdminLTE-5.0/scripts/pi-hole/php/FTL.php AdminLTE-5.0.cust/scripts/pi-hole/php/FTL.php
--- AdminLTE-5.0/scripts/pi-hole/php/FTL.php	2020-05-10 20:07:48.000000000 +0200
+++ AdminLTE-5.0.cust/scripts/pi-hole/php/FTL.php	2020-05-19 20:24:40.001849938 +0200
@@ -11,7 +11,7 @@ function connectFTL($address, $port=4711
 	if($address == "127.0.0.1")
 	{
 		// Read port
-		$portfile = file_get_contents("/var/run/pihole-FTL.port");
+		$portfile = file_get_contents("/run/pihole-ftl/pihole-FTL.port");
 		if(is_numeric($portfile))
 			$port = intval($portfile);
 	}
diff -uprN AdminLTE-5.0/scripts/pi-hole/php/add.php AdminLTE-5.0.cust/scripts/pi-hole/php/add.php
--- AdminLTE-5.0/scripts/pi-hole/php/add.php	2020-05-10 20:07:48.000000000 +0200
+++ AdminLTE-5.0.cust/scripts/pi-hole/php/add.php	2020-05-19 20:24:40.036847689 +0200
@@ -86,7 +86,7 @@ switch($list) {
 
 // Reload lists in pihole-FTL after having added something
 if ($reload) {
-	echo shell_exec("sudo pihole restartdns reload-lists");
+	echo shell_exec("sudo /usr/bin/pihole restartdns reload-lists");
 }
 ?>
 
diff -uprN AdminLTE-5.0/scripts/pi-hole/php/customdns.php AdminLTE-5.0.cust/scripts/pi-hole/php/customdns.php
--- AdminLTE-5.0/scripts/pi-hole/php/customdns.php	2020-05-10 20:07:48.000000000 +0200
+++ AdminLTE-5.0.cust/scripts/pi-hole/php/customdns.php	2020-05-19 20:24:40.046847047 +0200
@@ -81,7 +81,7 @@
                     if (get_ip_type($entry->ip) == $ipType)
                         return errorJsonResponse("This domain already has a custom DNS entry for an IPv" . $ipType);
 
-            exec("sudo pihole -a addcustomdns ".$ip." ".$domain);
+            exec("sudo /usr/bin/pihole -a addcustomdns ".$ip." ".$domain);
 
             return successJsonResponse();
         }
@@ -117,7 +117,7 @@
             if (!$found)
                 return errorJsonResponse("This domain/ip association does not exist");
 
-            exec("sudo pihole -a removecustomdns ".$ip." ".$domain);
+            exec("sudo /usr/bin/pihole -a removecustomdns ".$ip." ".$domain);
 
             return successJsonResponse();
         }
diff -uprN AdminLTE-5.0/scripts/pi-hole/php/footer.php AdminLTE-5.0.cust/scripts/pi-hole/php/footer.php
--- AdminLTE-5.0/scripts/pi-hole/php/footer.php	2020-05-10 20:07:48.000000000 +0200
+++ AdminLTE-5.0.cust/scripts/pi-hole/php/footer.php	2020-05-19 20:24:40.023848524 +0200
@@ -52,15 +52,15 @@
             <b>Pi-hole Version </b> <?php
             echo $core_current;
             if(isset($core_commit)) { echo " (".$core_branch.", ".$core_commit.")"; }
-            if($core_update){ ?> <a class="alert-link lookatme" href="https://github.com/pi-hole/pi-hole/releases" rel="noopener" target="_blank">(Update available!)</a><?php } ?>
+            if($core_update){ ?> <a class="alert-link lookatme" href="https://aur.archlinux.org/packages/pi-hole-server" rel="noopener" target="_blank">(Update available!)</a><?php } ?>
             <b>Web Interface Version </b><?php
             echo $web_current;
             if(isset($web_commit)) { echo " (".$web_branch.", ".$web_commit.")"; }
-            if($web_update){ ?> <a class="alert-link lookatme" href="https://github.com/pi-hole/AdminLTE/releases" rel="noopener" target="_blank">(Update available!)</a><?php } ?>
+            if($web_update){ ?> <a class="alert-link lookatme" href="https://aur.archlinux.org/packages/pi-hole-server" rel="noopener" target="_blank">(Update available!)</a><?php } ?>
             <b>FTL Version </b> <?php
             echo $FTL_current;
             if(isset($FTL_commit)) { echo " (".$FTL_branch.", ".$FTL_commit.")"; }
-            if($FTL_update){ ?> <a class="alert-link lookatme" href="https://github.com/pi-hole/FTL/releases" rel="noopener" target="_blank">(Update available!)</a><?php } ?>
+            if($FTL_update){ ?> <a class="alert-link lookatme" href="https://aur.archlinux.org/packages/pi-hole-server" rel="noopener" target="_blank">(Update available!)</a><?php } ?>
         </div>
         <div style="display: inline-block"><strong><a href="https://pi-hole.net/donate/" rel="noopener" target="_blank"><i class="fa fa-heart"></i> Donate</a></strong> if you found this useful.</div>
     </footer>
diff -uprN AdminLTE-5.0/scripts/pi-hole/php/gravity.sh.php AdminLTE-5.0.cust/scripts/pi-hole/php/gravity.sh.php
--- AdminLTE-5.0/scripts/pi-hole/php/gravity.sh.php	2020-05-10 20:07:48.000000000 +0200
+++ AdminLTE-5.0.cust/scripts/pi-hole/php/gravity.sh.php	2020-05-19 20:24:40.038847561 +0200
@@ -30,7 +30,7 @@ function echoEvent($datatext) {
     echo "data: ".implode("\ndata: ", explode("\n",$datatext))."\n\n";
 }
 
-$proc = popen("sudo pihole -g", 'r');
+$proc = popen("sudo /usr/bin/pihole -g", 'r');
 while (!feof($proc)) {
     echoEvent(fread($proc, 4096));
 }
diff -uprN AdminLTE-5.0/scripts/pi-hole/php/groups.php AdminLTE-5.0.cust/scripts/pi-hole/php/groups.php
--- AdminLTE-5.0/scripts/pi-hole/php/groups.php	2020-05-10 20:07:48.000000000 +0200
+++ AdminLTE-5.0.cust/scripts/pi-hole/php/groups.php	2020-05-19 20:24:40.034847818 +0200
@@ -808,5 +808,5 @@ if ($_POST['action'] == 'get_groups') {
 }
 // Reload lists in pihole-FTL after having added something
 if ($reload) {
-    echo shell_exec('sudo pihole restartdns reload-lists');
+    echo shell_exec('sudo /usr/bin/pihole restartdns reload-lists');
 }
diff -uprN AdminLTE-5.0/scripts/pi-hole/php/header.php AdminLTE-5.0.cust/scripts/pi-hole/php/header.php
--- AdminLTE-5.0/scripts/pi-hole/php/header.php	2020-05-10 20:07:48.000000000 +0200
+++ AdminLTE-5.0.cust/scripts/pi-hole/php/header.php	2020-05-19 20:24:40.027848267 +0200
@@ -349,7 +349,7 @@ if($auth) {
                 <div class="pull-left info">
                     <p>Status</p>
                         <?php
-                        $pistatus = exec('sudo pihole status web');
+                        $pistatus = exec('sudo /usr/bin/pihole status web');
                         if ($pistatus == "1") {
                             echo '<a id="status"><i class="fa fa-circle text-green-light"></i> Active</a>';
                         } elseif ($pistatus == "0") {
@@ -606,12 +606,6 @@ if($auth) {
                             <i class="fa fa-list-ul"></i> <span>Tail pihole-FTL.log</span>
                         </a>
                     </li>
-                    <!-- Generate debug log -->
-                    <li<?php if($scriptname === "debug.php"){ ?> class="active"<?php } ?>>
-                        <a href="debug.php">
-                            <i class="fa fa-ambulance"></i> <span>Generate debug log</span>
-                        </a>
-                    </li>
                   </ul>
                 </li>
                 <!-- Network -->
diff -uprN AdminLTE-5.0/scripts/pi-hole/php/loginpage.php AdminLTE-5.0.cust/scripts/pi-hole/php/loginpage.php
--- AdminLTE-5.0/scripts/pi-hole/php/loginpage.php	2020-05-10 20:07:48.000000000 +0200
+++ AdminLTE-5.0.cust/scripts/pi-hole/php/loginpage.php	2020-05-19 20:24:40.041847368 +0200
@@ -62,7 +62,7 @@
                 After installing Pi-hole for the first time, a password is generated and displayed to the user. The
                 password cannot be retrieved later on, but it is possible to set a new password (or explicitly disable
                 the password by setting an empty password) using the command
-                <pre>sudo pihole -a -p</pre>
+                <pre>sudo /usr/bin/pihole -a -p</pre>
               </div>
             </div>
           </div>
diff -uprN AdminLTE-5.0/scripts/pi-hole/php/queryads.php AdminLTE-5.0.cust/scripts/pi-hole/php/queryads.php
--- AdminLTE-5.0/scripts/pi-hole/php/queryads.php	2020-05-10 20:07:48.000000000 +0200
+++ AdminLTE-5.0.cust/scripts/pi-hole/php/queryads.php	2020-05-19 20:24:40.029848139 +0200
@@ -61,7 +61,7 @@ else
     $exact = "";
 }
 
-$proc = popen("sudo pihole -q -adlist ".$url." ".$exact, 'r');
+$proc = popen("sudo /usr/bin/pihole -q -adlist ".$url." ".$exact, 'r');
 while (!feof($proc)) {
     echoEvent(fread($proc, 4096));
 }
diff -uprN AdminLTE-5.0/scripts/pi-hole/php/savesettings.php AdminLTE-5.0.cust/scripts/pi-hole/php/savesettings.php
--- AdminLTE-5.0/scripts/pi-hole/php/savesettings.php	2020-05-10 20:07:48.000000000 +0200
+++ AdminLTE-5.0.cust/scripts/pi-hole/php/savesettings.php	2020-05-19 20:24:40.031848010 +0200
@@ -218,7 +218,7 @@ function addStaticDHCPLease($mac, $ip, $
 			}
 		}
 
-		exec("sudo pihole -a addstaticdhcp ".$mac." ".$ip." ".$hostname);
+		exec("sudo /usr/bin/pihole -a addstaticdhcp ".$mac." ".$ip." ".$hostname);
 		$success .= "A new static address has been added";
 		return true;
 	} catch(Exception $exception) {
@@ -366,13 +366,13 @@ function addStaticDHCPLease($mac, $ip, $
 					// Fallback
 					$DNSinterface = "local";
 				}
-				exec("sudo pihole -a -i ".$DNSinterface." -web");
+				exec("sudo /usr/bin/pihole -a -i ".$DNSinterface." -web");
 
 				// If there has been no error we can save the new DNS server IPs
 				if(!strlen($error))
 				{
 					$IPs = implode (",", $DNSservers);
-					$return = exec("sudo pihole -a setdns \"".$IPs."\" ".$extra);
+					$return = exec("sudo /usr/bin/pihole -a setdns \"".$IPs."\" ".$extra);
 					$success .= htmlspecialchars($return)."<br>";
 					$success .= "The DNS settings have been updated (using ".$DNSservercount." DNS servers)";
 				}
@@ -388,17 +388,17 @@ function addStaticDHCPLease($mac, $ip, $
 
 				if($_POST["action"] === "Disable")
 				{
-					exec("sudo pihole -l off");
+					exec("sudo /usr/bin/pihole -l off");
 					$success .= "Logging has been disabled and logs have been flushed";
 				}
 				elseif($_POST["action"] === "Disable-noflush")
 				{
-					exec("sudo pihole -l off noflush");
+					exec("sudo /usr/bin/pihole -l off noflush");
 					$success .= "Logging has been disabled, your logs have <strong>not</strong> been flushed";
 				}
 				else
 				{
-					exec("sudo pihole -l on");
+					exec("sudo /usr/bin/pihole -l on");
 					$success .= "Logging has been enabled";
 				}
 
@@ -455,8 +455,8 @@ function addStaticDHCPLease($mac, $ip, $
 				if(!strlen($error))
 				{
 					// All entries are okay
-					exec("sudo pihole -a setexcludedomains ".$domainlist);
-					exec("sudo pihole -a setexcludeclients ".$clientlist);
+					exec("sudo /usr/bin/pihole -a setexcludedomains ".$domainlist);
+					exec("sudo /usr/bin/pihole -a setexcludeclients ".$clientlist);
 					$success .= "The API settings have been updated<br>";
 				}
 				else
@@ -467,7 +467,7 @@ function addStaticDHCPLease($mac, $ip, $
 				// Set query log options
 				if(isset($_POST["querylog-permitted"]) && isset($_POST["querylog-blocked"]))
 				{
-					exec("sudo pihole -a setquerylog all");
+					exec("sudo /usr/bin/pihole -a setquerylog all");
 					if(!isset($_POST["privacyMode"]))
 					{
 						$success .= "All entries will be shown in Query Log";
@@ -479,7 +479,7 @@ function addStaticDHCPLease($mac, $ip, $
 				}
 				elseif(isset($_POST["querylog-permitted"]))
 				{
-					exec("sudo pihole -a setquerylog permittedonly");
+					exec("sudo /usr/bin/pihole -a setquerylog permittedonly");
 					if(!isset($_POST["privacyMode"]))
 					{
 						$success .= "Only permitted will be shown in Query Log";
@@ -491,24 +491,24 @@ function addStaticDHCPLease($mac, $ip, $
 				}
 				elseif(isset($_POST["querylog-blocked"]))
 				{
-					exec("sudo pihole -a setquerylog blockedonly");
+					exec("sudo /usr/bin/pihole -a setquerylog blockedonly");
 					$success .= "Only blocked entries will be shown in Query Log";
 				}
 				else
 				{
-					exec("sudo pihole -a setquerylog nothing");
+					exec("sudo /usr/bin/pihole -a setquerylog nothing");
 					$success .= "No entries will be shown in Query Log";
 				}
 
 
 				if(isset($_POST["privacyMode"]))
 				{
-					exec("sudo pihole -a privacymode true");
+					exec("sudo /usr/bin/pihole -a privacymode true");
 					$success .= " (privacy mode enabled)";
 				}
 				else
 				{
-					exec("sudo pihole -a privacymode false");
+					exec("sudo /usr/bin/pihole -a privacymode false");
 				}
 
 				break;
@@ -516,15 +516,15 @@ function addStaticDHCPLease($mac, $ip, $
 			case "webUI":
 				if($_POST["tempunit"] == "F")
 				{
-					exec('sudo pihole -a -f');
+					exec('sudo /usr/bin/pihole -a -f');
 				}
 				elseif($_POST["tempunit"] == "K")
 				{
-					exec('sudo pihole -a -k');
+					exec('sudo /usr/bin/pihole -a -k');
 				}
 				else
 				{
-					exec('sudo pihole -a -c');
+					exec('sudo /usr/bin/pihole -a -c');
 				}
 				$adminemail = trim($_POST["adminemail"]);
 				if(strlen($adminemail) == 0 || !isset($adminemail))
@@ -537,36 +537,36 @@ function addStaticDHCPLease($mac, $ip, $
 				}
 				else
 				{
-					exec('sudo pihole -a -e \''.$adminemail.'\'');
+					exec('sudo /usr/bin/pihole -a -e \''.$adminemail.'\'');
 				}
 				if(isset($_POST["boxedlayout"]))
 				{
-					exec('sudo pihole -a layout boxed');
+					exec('sudo /usr/bin/pihole -a layout boxed');
 				}
 				else
 				{
-					exec('sudo pihole -a layout traditional');
+					exec('sudo /usr/bin/pihole -a layout traditional');
 				}
 				$success .= "The webUI settings have been updated";
 				break;
 
 			case "poweroff":
-				exec("sudo pihole -a poweroff");
+				exec("sudo /usr/bin/pihole -a poweroff");
 				$success = "The system will poweroff in 5 seconds...";
 				break;
 
 			case "reboot":
-				exec("sudo pihole -a reboot");
+				exec("sudo /usr/bin/pihole -a reboot");
 				$success = "The system will reboot in 5 seconds...";
 				break;
 
 			case "restartdns":
-				exec("sudo pihole -a restartdns");
+				exec("sudo /usr/bin/pihole -a restartdns");
 				$success = "The DNS server has been restarted";
 				break;
 
 			case "flushlogs":
-				exec("sudo pihole -f");
+				exec("sudo /usr/bin/pihole -f");
 				$success = "The Pi-hole log file has been flushed";
 				break;
 
@@ -593,7 +593,7 @@ function addStaticDHCPLease($mac, $ip, $
 
 					if(!strlen($error))
 					{
-						exec("sudo pihole -a removestaticdhcp ".$mac);
+						exec("sudo /usr/bin/pihole -a removestaticdhcp ".$mac);
 						$success .= "The static address with MAC address ".htmlspecialchars($mac)." has been removed";
 					}
 					break;
@@ -660,13 +660,13 @@ function addStaticDHCPLease($mac, $ip, $
 
 					if(!strlen($error))
 					{
-						exec("sudo pihole -a enabledhcp ".$from." ".$to." ".$router." ".$leasetime." ".$domain." ".$ipv6." ".$rapidcommit);
+						exec("sudo /usr/bin/pihole -a enabledhcp ".$from." ".$to." ".$router." ".$leasetime." ".$domain." ".$ipv6." ".$rapidcommit);
 						$success .= "The DHCP server has been activated ".htmlspecialchars($type);
 					}
 				}
 				else
 				{
-					exec("sudo pihole -a disabledhcp");
+					exec("sudo /usr/bin/pihole -a disabledhcp");
 					$success = "The DHCP server has been deactivated";
 				}
 
@@ -684,11 +684,11 @@ function addStaticDHCPLease($mac, $ip, $
 					}
 
 					// Store privacy level
-					exec("sudo pihole -a privacylevel ".$level);
+					exec("sudo /usr/bin/pihole -a privacylevel ".$level);
 
 					if($privacylevel > $level)
 					{
-						exec("sudo pihole -a restartdns");
+						exec("sudo /usr/bin/pihole -a restartdns");
 						$success .= "The privacy level has been decreased and the DNS resolver has been restarted";
 					}
 					elseif($privacylevel < $level)
@@ -707,7 +707,7 @@ function addStaticDHCPLease($mac, $ip, $
 				break;
 			// Flush network table
 			case "flusharp":
-				exec("sudo pihole arpflush quiet", $output);
+				exec("sudo /usr/bin/pihole arpflush quiet", $output);
 				$error = implode("<br>", $output);
 				if(strlen($error) == 0)
 				{
diff -uprN AdminLTE-5.0/scripts/pi-hole/php/tailLog.php AdminLTE-5.0.cust/scripts/pi-hole/php/tailLog.php
--- AdminLTE-5.0/scripts/pi-hole/php/tailLog.php	2020-05-10 20:07:48.000000000 +0200
+++ AdminLTE-5.0.cust/scripts/pi-hole/php/tailLog.php	2020-05-19 20:24:40.005849681 +0200
@@ -14,11 +14,11 @@ if(!$auth) die("Not authorized");
 // files as large as the pihole.log
 if(isset($_GET["FTL"]))
 {
-	$file = fopen("/var/log/pihole-FTL.log","r");
+	$file = fopen("/run/log/pihole-ftl/pihole-FTL.log","r");
 }
 else
 {
-	$file = fopen("/var/log/pihole.log","r");
+	$file = fopen("/run/log/pihole/pihole.log","r");
 }
 
 if(!$file)
diff -uprN AdminLTE-5.0/scripts/pi-hole/php/teleporter.php AdminLTE-5.0.cust/scripts/pi-hole/php/teleporter.php
--- AdminLTE-5.0/scripts/pi-hole/php/teleporter.php	2020-05-10 20:07:48.000000000 +0200
+++ AdminLTE-5.0.cust/scripts/pi-hole/php/teleporter.php	2020-05-19 20:24:40.045847111 +0200
@@ -439,7 +439,7 @@ if(isset($_POST["action"]))
 
 		if($importedsomething)
 		{
-			exec("sudo pihole restartdns reload");
+			exec("sudo /usr/bin/pihole restartdns reload");
 		}
 
 		unlink($fullfilename);
diff -uprN AdminLTE-5.0/scripts/pi-hole/php/update_checker.php AdminLTE-5.0.cust/scripts/pi-hole/php/update_checker.php
--- AdminLTE-5.0/scripts/pi-hole/php/update_checker.php	2020-05-10 20:07:48.000000000 +0200
+++ AdminLTE-5.0.cust/scripts/pi-hole/php/update_checker.php	2020-05-19 20:24:40.016848974 +0200
@@ -7,12 +7,12 @@ $GitHubVersions = "/etc/pihole/GitHubVer
 if(!is_readable($localversions) || !is_readable($localbranches) || !is_readable($GitHubVersions))
 {
 	$core_branch = "master";
-	$core_current = "N/A";
+	$core_current = "5.0";
 	$core_update = false;
 	$web_branch = "master";
-	$web_current = "N/A";
+	$web_current = "5.0";
 	$web_update = false;
-	$FTL_current = "N/A";
+	$FTL_current = exec("pihole-FTL version");
 	$FTL_update = false;
 }
 else
@@ -25,31 +25,31 @@ else
 	// Check if on a dev branch
 	$core_branch = $branches[0];
 	if($core_branch !== "master") {
-	    $core_current = "vDev";
+	    $core_current = "5.0";
 	    $core_commit = $versions[0];
 	}
 	else {
-	    $core_current = explode("-",$versions[0])[0];
+	    $core_current = "5.0";
 	}
 
 	/********** Get Pi-hole web branch / version / commit **********/
 	$web_branch = $branches[1];
 	if($web_branch !== "master") {
-	    $web_current = "vDev";
+	    $web_current = "5.0";
 	    $web_commit = $versions[1];
 	}
 	else {
-	    $web_current = explode("-",$versions[1])[0];
+	    $web_current = "5.0";
 	}
 
 	/********** Get Pi-hole FTL (not a git repository) **********/
 	$FTL_branch = $branches[2];
 	if(substr($versions[2], 0, 4) === "vDev") {
-	    $FTL_current = "vDev";
+	    $FTL_current = exec("pihole-FTL version");
 	    $FTL_commit = $versions[2];
 	}
 	else {
-	    $FTL_current = $versions[2];
+	    $FTL_current = exec("pihole-FTL version");
 	}
 
 	// Get data from GitHub
