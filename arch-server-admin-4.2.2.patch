diff -uprN AdminLTE-4.2/api.php AdminLTE-4.2.cust/api.php
--- AdminLTE-4.2/api.php	2019-02-03 17:51:17.000000000 +0100
+++ AdminLTE-4.2.cust/api.php	2019-02-18 19:29:20.875386934 +0100
@@ -20,7 +20,7 @@ $data = array();
 // Common API functions
 if (isset($_GET['status']))
 {
-	$pistatus = exec('sudo pihole status web');
+	$pistatus = exec('sudo /usr/bin/pihole status web');
 	if ($pistatus == "1")
 	{
 		$data = array_merge($data, array("status" => "enabled"));
@@ -42,7 +42,7 @@ elseif (isset($_GET['enable']) && $auth)
 		// Skip token validation if explicit auth string is given
 		check_csrf($_GET['token']);
 	}
-	exec('sudo pihole enable');
+	exec('sudo /usr/bin/pihole enable');
 	$data = array_merge($data, array("status" => "enabled"));
 	unlink("../custom_disable_timer");
 }
@@ -63,12 +63,12 @@ elseif (isset($_GET['disable']) && $auth
 	if($disable > 0)
 	{
 		$timestamp = time();
-		exec("sudo pihole disable ".$disable."s");
+		exec("sudo /usr/bin/pihole disable ".$disable."s");
 		file_put_contents("../custom_disable_timer",($timestamp+$disable)*1000);
 	}
 	else
 	{
-		exec('sudo pihole disable');
+		exec('sudo /usr/bin/pihole disable');
 		unlink("../custom_disable_timer");
 	}
 	$data = array_merge($data, array("status" => "disabled"));
diff -uprN AdminLTE-4.2/scripts/pi-hole/php/FTL.php AdminLTE-4.2.cust/scripts/pi-hole/php/FTL.php
--- AdminLTE-4.2/scripts/pi-hole/php/FTL.php	2019-02-03 17:51:17.000000000 +0100
+++ AdminLTE-4.2.cust/scripts/pi-hole/php/FTL.php	2019-02-18 19:29:20.845387013 +0100
@@ -11,7 +11,7 @@ function connectFTL($address, $port=4711
 	if($address == "127.0.0.1")
 	{
 		// Read port
-		$portfile = file_get_contents("/var/run/pihole-FTL.port");
+		$portfile = file_get_contents("/run/pihole-ftl/pihole-FTL.port");
 		if(is_numeric($portfile))
 			$port = intval($portfile);
 	}
diff -uprN AdminLTE-4.2/scripts/pi-hole/php/add.php AdminLTE-4.2.cust/scripts/pi-hole/php/add.php
--- AdminLTE-4.2/scripts/pi-hole/php/add.php	2019-02-03 17:51:17.000000000 +0100
+++ AdminLTE-4.2.cust/scripts/pi-hole/php/add.php	2019-02-18 19:29:20.885386907 +0100
@@ -18,20 +18,20 @@ if (!$api) {
 switch($type) {
     case "white":
         if(!isset($_POST["auditlog"]))
-            echo shell_exec("sudo pihole -w ${_POST['domain']}");
+            echo shell_exec("sudo /usr/bin/pihole -w ${_POST['domain']}");
         else
         {
-            echo shell_exec("sudo pihole -w -n ${_POST['domain']}");
-            echo shell_exec("sudo pihole -a audit ${_POST['domain']}");
+            echo shell_exec("sudo /usr/bin/pihole -w -n ${_POST['domain']}");
+            echo shell_exec("sudo /usr/bin/pihole -a audit ${_POST['domain']}");
         }
         break;
     case "black":
         if(!isset($_POST["auditlog"]))
-            echo shell_exec("sudo pihole -b ${_POST['domain']}");
+            echo shell_exec("sudo /usr/bin/pihole -b ${_POST['domain']}");
         else
         {
-            echo shell_exec("sudo pihole -b -n ${_POST['domain']}");
-            echo shell_exec("sudo pihole -a audit ${_POST['domain']}");
+            echo shell_exec("sudo /usr/bin/pihole -b -n ${_POST['domain']}");
+            echo shell_exec("sudo /usr/bin/pihole -a audit ${_POST['domain']}");
         }
         break;
     case "wild":
@@ -44,7 +44,7 @@ switch($type) {
         add_regex($_POST['domain']);
         break;
     case "audit":
-        echo exec("sudo pihole -a audit ${_POST['domain']}");
+        echo exec("sudo /usr/bin/pihole -a audit ${_POST['domain']}");
         break;
 }
 
diff -uprN AdminLTE-4.2/scripts/pi-hole/php/footer.php AdminLTE-4.2.cust/scripts/pi-hole/php/footer.php
--- AdminLTE-4.2/scripts/pi-hole/php/footer.php	2019-02-03 17:51:17.000000000 +0100
+++ AdminLTE-4.2.cust/scripts/pi-hole/php/footer.php	2019-02-18 19:29:20.872053609 +0100
@@ -52,15 +52,15 @@
             <b>Pi-hole Version </b> <?php
             echo $core_current;
             if(isset($core_commit)) { echo " (".$core_branch.", ".$core_commit.")"; }
-            if($core_update){ ?> <a class="alert-link lookatme" href="https://github.com/pi-hole/pi-hole/releases" target="_blank">(Update available!)</a><?php } ?>
+            if($core_update){ ?> <a class="alert-link lookatme" href="https://aur.archlinux.org/packages/pi-hole-server" target="_blank">(Update available!)</a><?php } ?>
             <b>Web Interface Version </b><?php
             echo $web_current;
             if(isset($web_commit)) { echo " (".$web_branch.", ".$web_commit.")"; }
-            if($web_update){ ?> <a class="alert-link lookatme" href="https://github.com/pi-hole/AdminLTE/releases" target="_blank">(Update available!)</a><?php } ?>
+            if($web_update){ ?> <a class="alert-link lookatme" href="https://aur.archlinux.org/packages/pi-hole-server" target="_blank">(Update available!)</a><?php } ?>
             <b>FTL Version </b> <?php
             echo $FTL_current;
             if(isset($FTL_commit)) { echo " (".$FTL_branch.", ".$FTL_commit.")"; }
-            if($FTL_update){ ?> <a class="alert-link lookatme" href="https://github.com/pi-hole/FTL/releases" target="_blank">(Update available!)</a><?php } ?>
+            if($FTL_update){ ?> <a class="alert-link lookatme" href="https://aur.archlinux.org/packages/pi-hole-server" target="_blank">(Update available!)</a><?php } ?>
         </div>
         <div style="display: inline-block"><strong><a href="https://pi-hole.net/donate" target="_blank"><i class="fa fa-heart"></i> Donate</a></strong> if you found this useful.</div>
     </footer>
diff -uprN AdminLTE-4.2/scripts/pi-hole/php/gravity.sh.php AdminLTE-4.2.cust/scripts/pi-hole/php/gravity.sh.php
--- AdminLTE-4.2/scripts/pi-hole/php/gravity.sh.php	2019-02-03 17:51:17.000000000 +0100
+++ AdminLTE-4.2.cust/scripts/pi-hole/php/gravity.sh.php	2019-02-18 19:29:20.888720232 +0100
@@ -30,7 +30,7 @@ function echoEvent($datatext) {
     echo "data: ".implode("\ndata: ", explode("\n",$datatext))."\n\n";
 }
 
-$proc = popen("sudo pihole -g", 'r');
+$proc = popen("sudo /usr/bin/pihole -g", 'r');
 while (!feof($proc)) {
     echoEvent(fread($proc, 4096));
 }
diff -uprN AdminLTE-4.2/scripts/pi-hole/php/header.php AdminLTE-4.2.cust/scripts/pi-hole/php/header.php
--- AdminLTE-4.2/scripts/pi-hole/php/header.php	2019-02-03 17:51:17.000000000 +0100
+++ AdminLTE-4.2.cust/scripts/pi-hole/php/header.php	2019-02-18 19:29:20.875386934 +0100
@@ -323,7 +323,7 @@ if($auth) {
                 <div class="pull-left info">
                     <p>Status</p>
                         <?php
-                        $pistatus = exec('sudo pihole status web');
+                        $pistatus = exec('sudo /usr/bin/pihole status web');
                         if ($pistatus == "1") {
                             echo '<a id="status"><i class="fa fa-circle" style="color:#7FFF00"></i> Active</a>';
                         } elseif ($pistatus == "0") {
@@ -551,12 +551,6 @@ if($auth) {
                             <i class="fa fa-list-ul"></i> <span>Tail pihole-FTL.log</span>
                         </a>
                     </li>
-                    <!-- Generate debug log -->
-                    <li<?php if($scriptname === "debug.php"){ ?> class="active"<?php } ?>>
-                        <a href="debug.php">
-                            <i class="fa fa-ambulance"></i> <span>Generate debug log</span>
-                        </a>
-                    </li>
                   </ul>
                 </li>
                 <!-- Settings -->
diff -uprN AdminLTE-4.2/scripts/pi-hole/php/loginpage.php AdminLTE-4.2.cust/scripts/pi-hole/php/loginpage.php
--- AdminLTE-4.2/scripts/pi-hole/php/loginpage.php	2019-02-03 17:51:17.000000000 +0100
+++ AdminLTE-4.2.cust/scripts/pi-hole/php/loginpage.php	2019-02-18 19:29:20.888720232 +0100
@@ -59,7 +59,7 @@
                 After installing Pi-hole for the first time, a password is generated and displayed to the user. The
                 password cannot be retrieved later on, but it is possible to set a new password (or explicitly disable
                 the password by setting an empty password) using the command
-                <pre>sudo pihole -a -p</pre>
+                <pre>sudo /usr/bin/pihole -a -p</pre>
               </div>
             </div>
           </div>
diff -uprN AdminLTE-4.2/scripts/pi-hole/php/queryads.php AdminLTE-4.2.cust/scripts/pi-hole/php/queryads.php
--- AdminLTE-4.2/scripts/pi-hole/php/queryads.php	2019-02-03 17:51:17.000000000 +0100
+++ AdminLTE-4.2.cust/scripts/pi-hole/php/queryads.php	2019-02-18 19:29:20.878720259 +0100
@@ -59,7 +59,7 @@ else
     $exact = "";
 }
 
-$proc = popen("sudo pihole -q -adlist ".$url." ".$exact, 'r');
+$proc = popen("sudo /usr/bin/pihole -q -adlist ".$url." ".$exact, 'r');
 while (!feof($proc)) {
     echoEvent(fread($proc, 4096));
 }
diff -uprN AdminLTE-4.2/scripts/pi-hole/php/savesettings.php AdminLTE-4.2.cust/scripts/pi-hole/php/savesettings.php
--- AdminLTE-4.2/scripts/pi-hole/php/savesettings.php	2019-02-03 17:51:17.000000000 +0100
+++ AdminLTE-4.2.cust/scripts/pi-hole/php/savesettings.php	2019-02-18 19:29:20.882053582 +0100
@@ -311,13 +311,13 @@ function readAdlists()
 					// Fallback
 					$DNSinterface = "local";
 				}
-				exec("sudo pihole -a -i ".$DNSinterface." -web");
+				exec("sudo /usr/bin/pihole -a -i ".$DNSinterface." -web");
 
 				// If there has been no error we can save the new DNS server IPs
 				if(!strlen($error))
 				{
 					$IPs = implode (",", $DNSservers);
-					$return = exec("sudo pihole -a setdns \"".$IPs."\" ".$extra);
+					$return = exec("sudo /usr/bin/pihole -a setdns \"".$IPs."\" ".$extra);
 					$success .= htmlspecialchars($return)."<br>";
 					$success .= "The DNS settings have been updated (using ".$DNSservercount." DNS servers)";
 				}
@@ -333,17 +333,17 @@ function readAdlists()
 
 				if($_POST["action"] === "Disable")
 				{
-					exec("sudo pihole -l off");
+					exec("sudo /usr/bin/pihole -l off");
 					$success .= "Logging has been disabled and logs have been flushed";
 				}
 				elseif($_POST["action"] === "Disable-noflush")
 				{
-					exec("sudo pihole -l off noflush");
+					exec("sudo /usr/bin/pihole -l off noflush");
 					$success .= "Logging has been disabled, your logs have <strong>not</strong> been flushed";
 				}
 				else
 				{
-					exec("sudo pihole -l on");
+					exec("sudo /usr/bin/pihole -l on");
 					$success .= "Logging has been enabled";
 				}
 
@@ -400,8 +400,8 @@ function readAdlists()
 				if(!strlen($error))
 				{
 					// All entries are okay
-					exec("sudo pihole -a setexcludedomains ".$domainlist);
-					exec("sudo pihole -a setexcludeclients ".$clientlist);
+					exec("sudo /usr/bin/pihole -a setexcludedomains ".$domainlist);
+					exec("sudo /usr/bin/pihole -a setexcludeclients ".$clientlist);
 					$success .= "The API settings have been updated<br>";
 				}
 				else
@@ -412,7 +412,7 @@ function readAdlists()
 				// Set query log options
 				if(isset($_POST["querylog-permitted"]) && isset($_POST["querylog-blocked"]))
 				{
-					exec("sudo pihole -a setquerylog all");
+					exec("sudo /usr/bin/pihole -a setquerylog all");
 					if(!isset($_POST["privacyMode"]))
 					{
 						$success .= "All entries will be shown in Query Log";
@@ -424,7 +424,7 @@ function readAdlists()
 				}
 				elseif(isset($_POST["querylog-permitted"]))
 				{
-					exec("sudo pihole -a setquerylog permittedonly");
+					exec("sudo /usr/bin/pihole -a setquerylog permittedonly");
 					if(!isset($_POST["privacyMode"]))
 					{
 						$success .= "Only permitted will be shown in Query Log";
@@ -436,24 +436,24 @@ function readAdlists()
 				}
 				elseif(isset($_POST["querylog-blocked"]))
 				{
-					exec("sudo pihole -a setquerylog blockedonly");
+					exec("sudo /usr/bin/pihole -a setquerylog blockedonly");
 					$success .= "Only blocked entries will be shown in Query Log";
 				}
 				else
 				{
-					exec("sudo pihole -a setquerylog nothing");
+					exec("sudo /usr/bin/pihole -a setquerylog nothing");
 					$success .= "No entries will be shown in Query Log";
 				}
 
 
 				if(isset($_POST["privacyMode"]))
 				{
-					exec("sudo pihole -a privacymode true");
+					exec("sudo /usr/bin/pihole -a privacymode true");
 					$success .= " (privacy mode enabled)";
 				}
 				else
 				{
-					exec("sudo pihole -a privacymode false");
+					exec("sudo /usr/bin/pihole -a privacymode false");
 				}
 
 				break;
@@ -461,15 +461,15 @@ function readAdlists()
 			case "webUI":
 				if($_POST["tempunit"] == "F")
 				{
-					exec('sudo pihole -a -f');
+					exec('sudo /usr/bin/pihole -a -f');
 				}
 				elseif($_POST["tempunit"] == "K")
 				{
-					exec('sudo pihole -a -k');
+					exec('sudo /usr/bin/pihole -a -k');
 				}
 				else
 				{
-					exec('sudo pihole -a -c');
+					exec('sudo /usr/bin/pihole -a -c');
 				}
 				$adminemail = trim($_POST["adminemail"]);
 				if(strlen($adminemail) == 0 || !isset($adminemail))
@@ -482,36 +482,36 @@ function readAdlists()
 				}
 				else
 				{
-					exec('sudo pihole -a -e \''.$adminemail.'\'');
+					exec('sudo /usr/bin/pihole -a -e \''.$adminemail.'\'');
 				}
 				if(isset($_POST["boxedlayout"]))
 				{
-					exec('sudo pihole -a layout boxed');
+					exec('sudo /usr/bin/pihole -a layout boxed');
 				}
 				else
 				{
-					exec('sudo pihole -a layout traditional');
+					exec('sudo /usr/bin/pihole -a layout traditional');
 				}
 				$success .= "The webUI settings have been updated";
 				break;
 
 			case "poweroff":
-				exec("sudo pihole -a poweroff");
+				exec("sudo /usr/bin/pihole -a poweroff");
 				$success = "The system will poweroff in 5 seconds...";
 				break;
 
 			case "reboot":
-				exec("sudo pihole -a reboot");
+				exec("sudo /usr/bin/pihole -a reboot");
 				$success = "The system will reboot in 5 seconds...";
 				break;
 
 			case "restartdns":
-				exec("sudo pihole -a restartdns");
+				exec("sudo /usr/bin/pihole -a restartdns");
 				$success = "The DNS server has been restarted";
 				break;
 
 			case "flushlogs":
-				exec("sudo pihole -f");
+				exec("sudo /usr/bin/pihole -f");
 				$success = "The Pi-hole log file has been flushed";
 				break;
 
@@ -567,7 +567,7 @@ function readAdlists()
 
 					if(!strlen($error))
 					{
-						exec("sudo pihole -a addstaticdhcp ".$mac." ".$ip." ".$hostname);
+						exec("sudo /usr/bin/pihole -a addstaticdhcp ".$mac." ".$ip." ".$hostname);
 						$success .= "A new static address has been added";
 					}
 					break;
@@ -584,7 +584,7 @@ function readAdlists()
 
 					if(!strlen($error))
 					{
-						exec("sudo pihole -a removestaticdhcp ".$mac);
+						exec("sudo /usr/bin/pihole -a removestaticdhcp ".$mac);
 						$success .= "The static address with MAC address ".htmlspecialchars($mac)." has been removed";
 					}
 					break;
@@ -651,13 +651,13 @@ function readAdlists()
 
 					if(!strlen($error))
 					{
-						exec("sudo pihole -a enabledhcp ".$from." ".$to." ".$router." ".$leasetime." ".$domain." ".$ipv6." ".$rapidcommit);
+						exec("sudo /usr/bin/pihole -a enabledhcp ".$from." ".$to." ".$router." ".$leasetime." ".$domain." ".$ipv6." ".$rapidcommit);
 						$success .= "The DHCP server has been activated ".htmlspecialchars($type);
 					}
 				}
 				else
 				{
-					exec("sudo pihole -a disabledhcp");
+					exec("sudo /usr/bin/pihole -a disabledhcp");
 					$success = "The DHCP server has been deactivated";
 				}
 
@@ -669,18 +669,18 @@ function readAdlists()
 					if(isset($_POST["adlist-del-".$key]))
 					{
 						// Delete list
-						exec("sudo pihole -a adlist del ".escapeshellcmd($value[1]));
+						exec("sudo /usr/bin/pihole -a adlist del ".escapeshellcmd($value[1]));
 					}
 					elseif(isset($_POST["adlist-enable-".$key]) && !$value[0])
 					{
 						// Is not enabled, but should be
-						exec("sudo pihole -a adlist enable ".escapeshellcmd($value[1]));
+						exec("sudo /usr/bin/pihole -a adlist enable ".escapeshellcmd($value[1]));
 
 					}
 					elseif(!isset($_POST["adlist-enable-".$key]) && $value[0])
 					{
 						// Is enabled, but shouldn't be
-						exec("sudo pihole -a adlist disable ".escapeshellcmd($value[1]));
+						exec("sudo /usr/bin/pihole -a adlist disable ".escapeshellcmd($value[1]));
 					}
 				}
 
@@ -689,7 +689,7 @@ function readAdlists()
 					$domains = array_filter(preg_split('/\r\n|[\r\n]/', $_POST["newuserlists"]));
 					foreach($domains as $domain)
 					{
-						exec("sudo pihole -a adlist add ".escapeshellcmd($domain));
+						exec("sudo /usr/bin/pihole -a adlist add ".escapeshellcmd($domain));
 					}
 				}
 
@@ -709,11 +709,11 @@ function readAdlists()
 					}
 
 					// Store privacy level
-					exec("sudo pihole -a privacylevel ".$level);
+					exec("sudo /usr/bin/pihole -a privacylevel ".$level);
 
 					if($privacylevel > $level)
 					{
-						exec("sudo pihole -a restartdns");
+						exec("sudo /usr/bin/pihole -a restartdns");
 						$success .= "The privacy level has been decreased and the DNS resolver has been restarted";
 					}
 					elseif($privacylevel < $level)
diff -uprN AdminLTE-4.2/scripts/pi-hole/php/sub.php AdminLTE-4.2.cust/scripts/pi-hole/php/sub.php
--- AdminLTE-4.2/scripts/pi-hole/php/sub.php	2019-02-03 17:51:17.000000000 +0100
+++ AdminLTE-4.2.cust/scripts/pi-hole/php/sub.php	2019-02-18 19:29:20.882053582 +0100
@@ -19,10 +19,10 @@ if (!$api) {
 
 switch($type) {
     case "white":
-        exec("sudo pihole -w -q -d ${_POST['domain']}");
+        exec("sudo /usr/bin/pihole -w -q -d ${_POST['domain']}");
         break;
     case "black":
-        exec("sudo pihole -b -q -d ${_POST['domain']}");
+        exec("sudo /usr/bin/pihole -b -q -d ${_POST['domain']}");
         break;
     case "regex":
         if(($list = file_get_contents($regexfile)) === FALSE)
@@ -46,7 +46,7 @@ switch($type) {
             // Send SIGHUP to pihole-FTL using a frontend command
             // to force reloading of the regex domains
             // This will also wipe the resolver's cache
-            echo exec("sudo pihole restartdns reload");
+            echo exec("sudo /usr/bin/pihole restartdns reload");
         }
         break;
 }
diff -uprN AdminLTE-4.2/scripts/pi-hole/php/tailLog.php AdminLTE-4.2.cust/scripts/pi-hole/php/tailLog.php
--- AdminLTE-4.2/scripts/pi-hole/php/tailLog.php	2019-02-03 17:51:17.000000000 +0100
+++ AdminLTE-4.2.cust/scripts/pi-hole/php/tailLog.php	2019-02-18 19:29:20.852053662 +0100
@@ -14,11 +14,11 @@ if(!$auth) die("Not authorized");
 // files as large as the pihole.log
 if(isset($_GET["FTL"]))
 {
-	$file = fopen("/var/log/pihole-FTL.log","r");
+	$file = fopen("/run/log/pihole-ftl/pihole-FTL.log","r");
 }
 else
 {
-	$file = fopen("/var/log/pihole.log","r");
+	$file = fopen("/run/log/pihole/pihole.log","r");
 }
 
 if(!$file)
diff -uprN AdminLTE-4.2/scripts/pi-hole/php/update_checker.php AdminLTE-4.2.cust/scripts/pi-hole/php/update_checker.php
--- AdminLTE-4.2/scripts/pi-hole/php/update_checker.php	2019-02-03 17:51:17.000000000 +0100
+++ AdminLTE-4.2.cust/scripts/pi-hole/php/update_checker.php	2019-02-18 19:29:20.862053636 +0100
@@ -7,12 +7,12 @@ $GitHubVersions = "/etc/pihole/GitHubVer
 if(!is_readable($localversions) || !is_readable($localbranches) || !is_readable($GitHubVersions))
 {
 	$core_branch = "master";
-	$core_current = "N/A";
+	$core_current = "4.2.2";
 	$core_update = false;
 	$web_branch = "master";
-	$web_current = "N/A";
+	$web_current = "4.2";
 	$web_update = false;
-	$FTL_current = "N/A";
+	$FTL_current = exec("pihole-FTL version");
 	$FTL_update = false;
 }
 else
@@ -25,31 +25,31 @@ else
 	// Check if on a dev branch
 	$core_branch = $branches[0];
 	if($core_branch !== "master") {
-	    $core_current = "vDev";
+	    $core_current = "4.2.2";
 	    $core_commit = $versions[0];
 	}
 	else {
-	    $core_current = explode("-",$versions[0])[0];
+	    $core_current = "4.2.2";
 	}
 
 	/********** Get Pi-hole web branch / version / commit **********/
 	$web_branch = $branches[1];
 	if($web_branch !== "master") {
-	    $web_current = "vDev";
+	    $web_current = "4.2";
 	    $web_commit = $versions[1];
 	}
 	else {
-	    $web_current = explode("-",$versions[1])[0];
+	    $web_current = "4.2";
 	}
 
 	/********** Get Pi-hole FTL (not a git repository) **********/
 	$FTL_branch = $branches[2];
 	if(substr($versions[2], 0, 4) === "vDev") {
-	    $FTL_current = "vDev";
+	    $FTL_current = exec("pihole-FTL version");
 	    $FTL_commit = $versions[2];
 	}
 	else {
-	    $FTL_current = $versions[2];
+	    $FTL_current = exec("pihole-FTL version");
 	}
 
 	// Get data from GitHub
